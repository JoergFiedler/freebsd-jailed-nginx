---
- name: Install nginx
  pkgng:
    name: 'nginx'
    state: present
    chroot: '{{ jail_home.stdout }}'
  register: pkg_result
  until: pkg_result is succeeded

- name: Copy nginx configuration
  template:
    backup: '{{ jail_backup_old_files }}'
    src: 'nginx.conf.j2'
    dest: '{{ jail_home.stdout }}/usr/local/etc/nginx/nginx.conf'

- name: Create directories
  file:
    path: '{{ jail_home.stdout }}/usr/local/etc/nginx/{{ item }}'
    state: directory
  loop:
    - 'includes'
    - 'ssl'

- name: Create cache directory
  file:
    path: '/var/db/nginx-cache'
    state: directory
    owner: 'www'
    group: 'www'

- name: Set global sftp/ssh configuration
  template:
    backup: '{{ jail_backup_old_files }}'
    src: 'sshd_sftp_config.j2'
    dest: '{{ jail_home.stdout }}/etc/ssh/sshd_sftp_config'
    force: no

- name: Use ssh/sftp configuration
  lineinfile:
    backup: '{{ jail_backup_old_files }}'
    dest: '{{ jail_home.stdout }}/etc/rc.conf'
    state: present
    force: no
    regexp: '^sshd_flags='
    line: 'sshd_flags="-f /etc/ssh/sshd_sftp_config"'

- name: Copy fastcgi params
  template:
    backup: '{{ jail_backup_old_files }}'
    src: 'fastcgi_params.j2'
    dest: '{{ jail_home.stdout }}/usr/local/etc/nginx/fastcgi_params'

- name: Enable service
  lineinfile:
    backup: '{{ jail_backup_old_files }}'
    dest: '{{ jail_home.stdout }}/etc/rc.conf'
    state: present
    regexp: '^nginx_enable='
    line: 'nginx_enable="YES"'

- import_tasks: nginx-letsencrypt.yml
  when: nginx_letsencrypt_enabled | default(false)

- include_tasks: nginx-server.yml
  loop: '{{ nginx_servers }}'
  loop_control:
    loop_var: nginx_server
